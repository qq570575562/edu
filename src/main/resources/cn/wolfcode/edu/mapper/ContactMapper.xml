<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.edu.mapper.ContactMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.edu.domain.Contact">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="duty" property="duty"/>
        <result column="facukty" property="facukty"/>
        <result column="dept" property="dept"/>
        <result column="tel" property="tel"/>
        <result column="email" property="email"/>
        <result column="gander" property="gander"/>
        <result column="birthday" property="birthday"/>
        <result column="main" property="main"/>
        <result column="qq" property="qq"/>
        <result column="intro" property="intro"/>
        <association property="university" javaType="Universitytrace" columnPrefix="un_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `contact`
    where id = #{id}
  </delete>
    <insert id="insert" parameterType="cn.wolfcode.edu.domain.Contact" useGeneratedKeys="true" keyProperty="id">
    insert into `contact` (name, duty, facukty, dept, tel, email, gander, birthday, 
      main, university_id,qq,intro)
    values (#{name}, #{duty}, #{facukty}, #{dept}, #{tel}, #{email}, #{gander}, #{birthday}, 
      #{main}, #{university.id},#{qq},#{intro})
  </insert>
    <update id="updateByPrimaryKey" parameterType="cn.wolfcode.edu.domain.Contact">
    update `contact`
    set name = #{name},
      duty = #{duty},
      facukty = #{facukty},
      dept = #{dept},
      tel = #{tel},
      email = #{email},
      gander = #{gander},
      birthday = #{birthday},
      main = #{main},
      qq = #{qq},
      intro = #{intro},
      university_id = #{university.id}
    where id = #{id}
  </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, name, duty, facukty, dept, tel, email, gander, birthday, main, university_id,qq,intro
    from `contact`
    where id = #{id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, name, duty, facukty, dept, tel, email, gander, birthday, main, university_id,intro,qq
    from `contact`
  </select>
    <!--分页查询-->
    <select id="queryForCount" resultType="java.lang.Integer">
        select count(c.id)
        from `contact` c
        LEFT JOIN universitytrace un on c.university_id = un.id
        <include refid="baseSql"/>
    </select>
    <select id="queryForList" resultMap="BaseResultMap">
        select c.id, c.name, c.duty, c.facukty, c.dept,
        c.tel, c.email, c.gander, c.birthday, c.main,c.qq,c.intro,
        un.id AS un_id , un.name AS un_name
        from `contact` c
        LEFT JOIN universitytrace un on c.university_id = un.id
        <include refid="baseSql"/>
        limit #{beginIndex},#{rows}
    </select>
    <sql id="baseSql">
        <where>
            <if test="keyword!=null and keyword!=''">
                and (c.name like concat('%',#{keyword},'%') or c.email like concat('%',#{keyword},'%'))
            </if>
            <if test="universityId !=null and universityId>0 ">
                and un.id = #{universityId}
            </if>
        </where>
    </sql>
</mapper>