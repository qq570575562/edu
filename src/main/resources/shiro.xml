<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">    <!--配置securityManager-->    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">        <property name="realm" ref="myRealm"/>        <property name="cacheManager" ref="cacheManager"/>    </bean>    <!--注册缓存器-->    <bean class="org.apache.shiro.cache.ehcache.EhCacheManager" id="cacheManager"/>    <!--配置凭证匹配器 HashedCredentialsMatcher 散列2次,md5加密-->    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">        <property name="hashAlgorithmName" value="md5"/>        <property name="hashIterations" value="2"/>    </bean>    <!--自定义myFormFilter拦截器-->    <bean id="myFormFilter" class="cn.wolfcode.edu.web.filter.MyFormFilter"></bean>    <!--自定义数据源(将上面的凭证匹配器设置到realm的属性上)-->    <bean id="myRealm" class="cn.wolfcode.edu.realm.MyRealm">        <property name="credentialsMatcher" ref="credentialsMatcher"/>    </bean>    <!--配置shiroFilter工厂-->    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">        <property name="securityManager" ref="securityManager"/>        <!--登陆表单的地址-->        <property name="loginUrl" value="/login.do"/>        <!--没有权限操作的地址-->        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>        <!--重新指定过滤器-->        <property name="filters">            <map>                <entry key="authc" value-ref="myFormFilter"/>            </map>        </property>        <!--配置路径的权限级别-->        <property name="filterChainDefinitions">            <value>                #静态资源可以匿名访问                /static/**=anon                #登陆页面设置为匿名访问                /login.jsp=anon                /register.jsp=anon                /register.do=anon                #chrome浏览器会找tomcat图标                /favicon.ico=anon                #当请求loginOut,会被logout捕获并清除session                /logOut.do=logout                #所有的请求都需要身份认证                /** = authc            </value>        </property>    </bean>    <!--使用cglib(继承)的方式来实现动态代理-->    <aop:config proxy-target-class="true"></aop:config>    <!--使用第三方去扫描shiro注解-->    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">        <property name="securityManager" ref="securityManager"></property>    </bean></beans>